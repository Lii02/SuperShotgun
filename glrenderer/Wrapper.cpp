#include "Wrapper.h"

#ifdef ENGINE_WINDOWS
PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT;
#define LOAD_OGL_FUNCTION(t, n) (t)wglGetProcAddress(n)
#elif ENGINE_LINUX
#include <GL/glx.h>
#define LOAD_OGL_FUNCTION(t, n) (t)glXGetProcAddress((const GLubyte*)n)
#endif


PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
PFNGLGENBUFFERSPROC glGenBuffers;
PFNGLBINDBUFFERPROC glBindBuffer;
PFNGLDELETEBUFFERSPROC glDeleteBuffers;
PFNGLBUFFERDATAPROC glBufferData;
PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
PFNGLCREATEPROGRAMPROC glCreateProgram;
PFNGLUSEPROGRAMPROC glUseProgram;
PFNGLDELETEPROGRAMPROC glDeleteProgram;
PFNGLCREATESHADERPROC glCreateShader;
PFNGLDELETESHADERPROC glDeleteShader;
PFNGLSHADERSOURCEPROC glShaderSource;
PFNGLGETSHADERIVPROC glGetShaderiv;
PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
PFNGLCOMPILESHADERPROC glCompileShader;
PFNGLDETACHSHADERPROC glDetachShader;
PFNGLATTACHSHADERPROC glAttachShader;
PFNGLVALIDATEPROGRAMPROC glValidateProgram;
PFNGLLINKPROGRAMPROC glLinkProgram;
PFNGLGETPROGRAMIVPROC glGetProgramiv;
PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
PFNGLUNIFORM1IPROC glUniform1i;
PFNGLUNIFORM1FPROC glUniform1f;
PFNGLUNIFORM2FPROC glUniform2f;
PFNGLUNIFORM3FPROC glUniform3f;
PFNGLUNIFORM4FPROC glUniform4f;
PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
PFNGLBUFFERSUBDATAPROC glBufferSubData;
PFNGLDRAWBUFFERSPROC glDrawBuffers;
PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
PFNGLACTIVETEXTUREPROC glActiveTexture;

void WrapperGL_LoadFunctions()
{
#ifdef ENGINE_WINDOWS
	wglSwapIntervalEXT = (PFNWGLSWAPINTERVALEXTPROC)wglGetProcAddress("wglSwapIntervalEXT");
#endif

	glGenVertexArrays = LOAD_OGL_FUNCTION(PFNGLGENVERTEXARRAYSPROC, "glGenVertexArrays");
	glDeleteVertexArrays = LOAD_OGL_FUNCTION(PFNGLDELETEVERTEXARRAYSPROC, "glDeleteVertexArrays");
	glBindVertexArray = LOAD_OGL_FUNCTION(PFNGLBINDVERTEXARRAYPROC, "glBindVertexArray");
	glGenBuffers = LOAD_OGL_FUNCTION(PFNGLGENBUFFERSPROC, "glGenBuffers");
	glBindBuffer = LOAD_OGL_FUNCTION(PFNGLBINDBUFFERPROC, "glBindBuffer");
	glDeleteBuffers = LOAD_OGL_FUNCTION(PFNGLDELETEBUFFERSPROC, "glDeleteBuffers");
	glBufferData = LOAD_OGL_FUNCTION(PFNGLBUFFERDATAPROC, "glBufferData");
	glVertexAttribPointer = LOAD_OGL_FUNCTION(PFNGLVERTEXATTRIBPOINTERPROC, "glVertexAttribPointer");
	glEnableVertexAttribArray = LOAD_OGL_FUNCTION(PFNGLENABLEVERTEXATTRIBARRAYPROC, "glEnableVertexAttribArray");
	glDisableVertexAttribArray = LOAD_OGL_FUNCTION(PFNGLDISABLEVERTEXATTRIBARRAYPROC, "glDisableVertexAttribArray");
	glCreateProgram = LOAD_OGL_FUNCTION(PFNGLCREATEPROGRAMPROC, "glCreateProgram");
	glDeleteProgram = LOAD_OGL_FUNCTION(PFNGLDELETEPROGRAMPROC, "glDeleteProgram");
	glUseProgram = LOAD_OGL_FUNCTION(PFNGLUSEPROGRAMPROC, "glUseProgram");
	glCreateShader = LOAD_OGL_FUNCTION(PFNGLCREATESHADERPROC, "glCreateShader");
	glDeleteShader = LOAD_OGL_FUNCTION(PFNGLDELETESHADERPROC, "glDeleteShader");
	glShaderSource = LOAD_OGL_FUNCTION(PFNGLSHADERSOURCEPROC, "glShaderSource");
	glGetShaderiv = LOAD_OGL_FUNCTION(PFNGLGETSHADERIVPROC, "glGetShaderiv");
	glGetShaderInfoLog = LOAD_OGL_FUNCTION(PFNGLGETSHADERINFOLOGPROC, "glGetShaderInfoLog");
	glCompileShader = LOAD_OGL_FUNCTION(PFNGLCOMPILESHADERPROC, "glCompileShader");
	glDetachShader = LOAD_OGL_FUNCTION(PFNGLDETACHSHADERPROC, "glDetachShader");
	glAttachShader = LOAD_OGL_FUNCTION(PFNGLATTACHSHADERPROC, "glAttachShader");
	glValidateProgram = LOAD_OGL_FUNCTION(PFNGLVALIDATEPROGRAMPROC, "glValidateProgram");
	glLinkProgram = LOAD_OGL_FUNCTION(PFNGLLINKPROGRAMPROC, "glLinkProgram");
	glGetProgramiv = LOAD_OGL_FUNCTION(PFNGLGETPROGRAMIVPROC, "glGetProgramiv");
	glGetProgramInfoLog = LOAD_OGL_FUNCTION(PFNGLGETPROGRAMINFOLOGPROC, "glGetProgramInfoLog");
	glBindAttribLocation = LOAD_OGL_FUNCTION(PFNGLBINDATTRIBLOCATIONPROC, "glBindAttribLocation");
	glGetUniformLocation = LOAD_OGL_FUNCTION(PFNGLGETUNIFORMLOCATIONPROC, "glGetUniformLocation");
	glUniform1i = LOAD_OGL_FUNCTION(PFNGLUNIFORM1IPROC, "glUniform1i");
	glUniform1f = LOAD_OGL_FUNCTION(PFNGLUNIFORM1FPROC, "glUniform1f");
	glUniform2f = LOAD_OGL_FUNCTION(PFNGLUNIFORM2FPROC, "glUniform2f");
	glUniform3f = LOAD_OGL_FUNCTION(PFNGLUNIFORM3FPROC, "glUniform3f");
	glUniform4f = LOAD_OGL_FUNCTION(PFNGLUNIFORM4FPROC, "glUniform4f");
	glUniformMatrix4fv = LOAD_OGL_FUNCTION(PFNGLUNIFORMMATRIX4FVPROC, "glUniformMatrix4fv");
	glGenFramebuffers = LOAD_OGL_FUNCTION(PFNGLGENFRAMEBUFFERSPROC, "glGenFramebuffers");
	glDeleteFramebuffers = LOAD_OGL_FUNCTION(PFNGLDELETEFRAMEBUFFERSPROC, "glDeleteFramebuffers");
	glBindFramebuffer = LOAD_OGL_FUNCTION(PFNGLBINDFRAMEBUFFERPROC, "glBindFramebuffer");
	glCheckFramebufferStatus = LOAD_OGL_FUNCTION(PFNGLCHECKFRAMEBUFFERSTATUSPROC, "glCheckFramebufferStatus");
	glFramebufferTexture2D = LOAD_OGL_FUNCTION(PFNGLFRAMEBUFFERTEXTURE2DPROC, "glFramebufferTexture2D");
	glGenRenderbuffers = LOAD_OGL_FUNCTION(PFNGLGENRENDERBUFFERSPROC, "glGenRenderbuffers");
	glDeleteRenderbuffers = LOAD_OGL_FUNCTION(PFNGLDELETERENDERBUFFERSPROC, "glDeleteRenderbuffers");
	glBindRenderbuffer = LOAD_OGL_FUNCTION(PFNGLBINDRENDERBUFFERPROC, "glBindRenderbuffer");
	glRenderbufferStorage = LOAD_OGL_FUNCTION(PFNGLRENDERBUFFERSTORAGEPROC, "glRenderbufferStorage");
	glFramebufferRenderbuffer = LOAD_OGL_FUNCTION(PFNGLFRAMEBUFFERRENDERBUFFERPROC, "glFramebufferRenderbuffer");
	glBufferSubData = LOAD_OGL_FUNCTION(PFNGLBUFFERSUBDATAPROC, "glBufferSubData");
	glDrawBuffers = LOAD_OGL_FUNCTION(PFNGLDRAWBUFFERSPROC, "glDrawBuffers");
	glBlitFramebuffer = LOAD_OGL_FUNCTION(PFNGLBLITFRAMEBUFFERPROC, "glBlitFramebuffer");
	glTexImage2DMultisample = LOAD_OGL_FUNCTION(PFNGLTEXIMAGE2DMULTISAMPLEPROC, "glTexImage2DMultisample");
	glRenderbufferStorageMultisample = LOAD_OGL_FUNCTION(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC, "glRenderbufferStorageMultisample");
	glActiveTexture = LOAD_OGL_FUNCTION(PFNGLACTIVETEXTUREPROC, "glActiveTexture");
}